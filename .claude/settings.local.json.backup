{
  "permissions": {
    "allow": [
      "Bash(claude doctor)",
      "Bash(npm i:*)",
      "Bash(claude --version)",
      "Bash(npm ls:*)",
      "Bash(npm cache clean:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm install:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(gh:*)",
      "Bash(git push:*)",
      "Bash(git rebase:*)",
      "WebSearch",
      "Bash(find:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:zenn.dev)",
      "Bash(afplay:*)",
      "Bash(gcloud:*)",
      "Bash(gemini:*)",
      "WebFetch(domain:generativelanguage.googleapis.com)",
      "WebFetch(domain:cloud.google.com)",
      "Read(//Users/madbarbarian/.config/**)",
      "Read(//Users/madbarbarian/.codex/**)",
      "Bash(codex:*)",
      "Bash(open:*)",
      "Read(//Users/madbarbarian/.claude/**)",
      "Bash(pip --version)",
      "Bash(pip3:*)",
      "Read(//usr/local/bin/**)",
      "Bash(sudo rm:*)",
      "Bash(pipx:*)",
      "mcp__context7__resolve-library-id",
      "Bash(uv:*)",
      "Bash(sh)",
      "Bash(/Library/Frameworks/Python.framework/Versions/3.11/bin/pip3 install excel-mcp-server)",
      "Bash(PYTHONPATH=/usr/local/lib/python3.13/site-packages /usr/local/Cellar/python@3.13/3.13.7/bin/python3.13 -c \"import powerpoint_mcp_server; print(''PowerPoint MCP Server: OK'')\")",
      "Read(//Users/madbarbarian/Library/Python/3.11/lib/python/site-packages/**)",
      "Read(//usr/local/lib/python3.13/site-packages/**)",
      "Bash(python3:*)",
      "Bash(/usr/local/Cellar/python@3.13/3.13.7/bin/python3.13 -c \"import powerpoint; print(''PowerPoint MCP: OK'')\")",
      "Bash(osascript:*)",
      "Read(//Applications/**)",
      "Bash(source .env)",
      "Read(//usr/local/Cellar/**)",
      "Bash(/usr/local/Cellar/python@3.13/3.13.7/bin/python3.13:*)",
      "Bash(/usr/local/Cellar/python@3.13/3.13.7/bin/pip3 install powerpoint-mcp-server)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(volta pin:*)",
      "Bash(volta list:*)",
      "Bash(npx:*)",
      "Bash(npm search:*)",
      "Bash(cat:*)",
      "Bash(env)",
      "Bash(echo:*)",
      "Bash(gh repo create:*)",
      "Bash(git clone:*)",
      "Bash(git pull:*)",
      "Bash(mv:*)",
      "Bash(git remote add:*)",
      "Bash(git fetch:*)",
      "Bash(mkdir:*)",
      "Bash(git checkout:*)",
      "mcp__serena__list_dir",
      "Read(//Users/madbarbarian/Desktop/**)",
      "Read(//Users/madbarbarian/Downloads/**)",
      "mcp__serena__activate_project",
      "Bash(node:*)",
      "Bash(chmod:*)",
      "mcp__serena__get_current_config",
      "Bash(grep:*)",
      "Bash(git remote:*)",
      "Bash(git merge:*)",
      "Bash(cp:*)"
    ],
    "deny": [
      "Read(./.env)",
      "Read(./.env.*)",
      "Read(./secrets/**)",
      "Read(./config/credentials.json)",
      "Read(./build)"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "supabase",
    "codex",
    "context7",
    "chrome-devtools",
    "file-system",
    "youtube",
    "veo3",
    "microsoft365",
    "figma-developer-mcp",
    "ffmpeg",
    "mulmocast-vision",
    "github",
    "slack",
    "perplexity",
    "serena",
    "playwright",
    "notion",
    "gemini",
    "stripe",
    "tavily"
  ],
  "hooks": {
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "afplay /System/Library/Sounds/Glass.aiff"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Edit|MultiEdit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "jq -r '.tool_input.file_path' | { read file_path; if echo \"$file_path\" | grep -q '\\.ts$'; then npx prettier --write \"$file_path\"; fi; }"
          }
        ]
      }
    ]
  }
}